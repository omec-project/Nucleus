
/*
 * Copyright 2020-present Infosys Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */
 
/**************************************
 * attachWfIdentityResponse.cpp
 * This is an auto generated file.
 * Please do not edit this file.
 * All edits to be made through template source file
 * <TOP-DIR/scripts/SMCodeGen/templates/stateMachineTmpls/state.cpp.tt>
 **************************************/


#include "actionTable.h"
#include "actionHandlers/actionHandlers.h"
#include "mmeSmDefs.h"
#include "utils/mmeStatesUtils.h"
#include "utils/mmeTimerTypes.h"

#include "mmeStates/attachWfIdentityResponse.h"	
#include "mmeStates/attachWfAia.h"

using namespace mme;
using namespace SM;

/******************************************************************************
* Constructor
******************************************************************************/
AttachWfIdentityResponse::AttachWfIdentityResponse():State(attach_wf_identity_response, defaultStateGuardTimerDuration_c)
{
        stateEntryAction = &MmeStatesUtils::on_state_entry;
        stateExitAction = &MmeStatesUtils::on_state_exit;
        eventValidator = &MmeStatesUtils::validate_event;
}

/******************************************************************************
* Destructor
******************************************************************************/
AttachWfIdentityResponse::~AttachWfIdentityResponse()
{
}

/******************************************************************************
* creates and returns static instance
******************************************************************************/
AttachWfIdentityResponse* AttachWfIdentityResponse::Instance()
{
        static AttachWfIdentityResponse state;
        return &state;
}

/******************************************************************************
* initializes eventToActionsMap
******************************************************************************/
void AttachWfIdentityResponse::initialize()
{
        {
                ActionTable actionTable;
                actionTable.addAction(&ActionHandlers::process_identity_response);
                actionTable.addAction(&ActionHandlers::send_air_to_hss);
                actionTable.setNextState(AttachWfAia::Instance());
                eventToActionsMap.insert(pair<uint16_t, ActionTable>(IDENTITY_RESPONSE_FROM_UE, actionTable));
        }
}
