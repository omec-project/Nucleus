[%- USE date(format = '%Y')%]
[%- #---------------------------------  START: GLOBALS ----------------------------------------# %]
 [%- primitiveTypes = [ "bool", "char",  "signed char", "unsigned char", "uint8_t",
                      "short", "signed short", "unsigned short", "uint16_t", 
                      "int", "signed int", "unsigned int", "uint32_t","long",
                      "signed long", "unsigned long", "float" , "uint64_t"] -%]
[%- #---------------------------------  END: GLOBALS ----------------------------------------# %]
[%- #-----------------------------  START: MACRO CURRENTYEAR --------------------------------# %]
 [%- MACRO CURRENTYEAR BLOCK- %]
 [%- currentYear = date.format %]
 [%- currentYear %]
 [%- END %]
[%- #-----------------------------  END: MACRO CURRENTYEAR ----------------------------------# %]
[%- #-----------------------------  START: MACRO CLASSNAME(str, AppendStr) -------------------# %]
 [%- MACRO CLASSNAME(Data, AppendStr) BLOCK- %]
 [%- className =  String.new %]
 [%- strList =  String.new(Data).split("_") %]
 [%- FOREACH Data = strList %]
 [%-    token = className.append(String.new(Data).capital.text()) %]
 [%- END %]
 [%- className = className.append( AppendStr ) %]
 [%- className %]
 [%- END %]
[%- #-----------------------------  START: MACRO FILENAME(str, AppendStr) ---------------------# %]
 [%- MACRO FILENAME(str, AppendStr) BLOCK %]
 [%- fileName =  String.new %]
 [%- fileName = CLASSNAME(str, AppendStr) %]
 [%- fileName FILTER lcfirst %]
 [%- END -%]
[%- #-----------------------------  END: MACRO FILENAME(str, AppendStr) --------------------# %]
[%- #-----------------------------  START: MACRO ARG(Data, str) ----------------------------# %]
 [%- MACRO ARG(Data,str) BLOCK -%]
 [%- argument = String.new() %]
 [%- dataType = String.new() %]
 [%- dataType = "" -%]
 [%- IF Data.Type.search('^(((\w)+\:\:)?\w)+( )?\*$') %]
 [%-    dataType = Data.Type -%]
 [%- ELSIF primitiveTypes.grep("$Data.Type").size !=0 %]
 [%-    dataType = Data.Type -%]
 [%- ELSIF Data.Type.grep('^enum (\w)+$').size ==1 %]
 [%-    dataType = Data.Type.substr(5) -%]
 [%- ELSIF Data.Type.grep('std\:\:shared_ptr').size ==1 %]
 [%-    dataType = Data.Type -%]
 [%- ELSE -%]
 [%-    IF Data.Properties != '' && Data.Properties.accessor != '' %]
 [%-        IF Data.Properties.accessor == "mutable" %]
 [%-            dataType = "$Data.Type&" -%]
 [%-        END %]
 [%-    END %]
 [%-    IF dataType == "" %]
 [%-        dataType = "const $Data.Type&" -%]
 [%-    END %]
 [%- END %]
 [%- IF dataType != "" %]
 [%-    IF str == "set" %]
 [%-		argument = "$dataType $Data.Name$/_i" -%]
 [%-    ELSE%]
 [%-		argument = "$dataType" -%]
 [%-    END %]
 [%- END %]
 [%- IF Data.Cardinality != '' %]
 [%-    IF str == "set" %]
 [%-            argument = "const $Data.Type* $Data.Name/_i,uint16_t len" -%]
 [%-    ELSE%]
 [%-        argument = "const $Data.Type*" -%]
 [%-    END %]
 [%- END %]
 [%- argument.remove("/") %]
 [%- END -%]
[%- #-----------------------------  END: MACRO ARG(Data, str) ---------------------------------# %]
[%- #-----------------------------  START: MACRO INITIALIZER(DataBlock) -----------------------# %]
 [% MACRO INITIALIZER(DataBlock) BLOCK %]
 [%- FOREACH Data = DataBlock.Data -%]
 [%- defaultval = String.new() -%]
 [%- defaultval = "$Data.Name/_m($Data.DefaultVal)" -%]
 [%- IF Data.Type.search('std\:\:array') -%]
 [%- Data.Name %]Count_m(0),[%-END -%]
 [%-IF Data.Cardinality=='' -%]
 [%- FOREACH type = primitiveTypes -%]
 [%- 	IF Data.Type == type -%]
 [%- defaultval="$Data.Name/_m(0)" -%]
 [%-END-%][%-END -%]
 [%-ELSE -%]
 [%- UNLESS Data.Type.search('std\:\:(list|vector|array)')  %]
 [%- defaultval="$Data.Name/Len_m(0)" -%][%-END -%]
 [%-END -%]
 [%-IF Data.Type.search('^(\w)+( )?\*$') -%]
 [%- defaultval="$Data.Name/_m(NULL)" -%]
 [%-END-%]
 [%-IF Data.Type.grep('std\:\:shared_ptr').size ==1 -%]
 [%- defaultval="$Data.Name/_m()" -%]
 [%-END-%]
 [%-IF Data.Type == "bool" -%]
 [%- defaultval="$Data.Name/_m(false)" -%]
 [%-END %]
 [% defaultval.remove("/") %]
 [%-UNLESS loop.last -%],[%END-%][%END-%]
 [%- FOREACH Child = DataBlock.Children -%]
 [%- IF Child.Cardinality != '' -%][%- IF Child.Type.search('std\:\:array') -%]
 ,[% Child.Name %]Count_m(0)[%END-%],[% Child.Name %]_m()[% ELSE -%]
 ,[% Child.Name %]_mp(NULL)[%END-%][% END -%][% END -%]
 [%- #-----------------------------  END: MACRO INITIALIZER(DataBlock) -----------------------# %]
 [%- #-----------------------------  START: MACRO INCLUDES(DataBlock) ---------------------# %]
 [%- MACRO INCLUDES(DataBlock) BLOCK %]
 [%- include = [] %]
 [%- FOREACH DataBlock = DataGroup.DataBlocks %]
 [%- FOREACH Data = DataBlock.Data %]
 [%- IF Data.Type.search('std\:\:list') %]
 [%- include.push('list') %]
 [%- include.push('algorithm') %]
 [%- ELSIF Data.Type.search('std\:\:vector') %]
 [%- include.push('vector') %]
 [%- include.push('algorithm') %]
 [%- ELSIF Data.Type.search('std\:\:array') %]
 [%- include.push('array') %]
 [%- ELSIF Data.Type.search('std\:\:shared_ptr') %]
 [%- include.push('memory') %]
 [%- END -%]
 [%- END -%]
 [%- FOREACH Data = DataBlock.Children %]
 [%- IF Data.Type.search('std\:\:list') %]
 [%- include.push('list') %]
 [%- include.push('algorithm') %]
 [%- ELSIF Data.Type.search('std\:\:vector') %]
 [%- include.push('vector') %]
 [%- include.push('algorithm') %]
 [%- ELSIF Data.Type.search('std\:\:array') %]
 [%- include.push('array') %]
 [%- ELSIF Data.Type.search('std\:\:shared_ptr') %]
 [%- include.push('memory') %]
 [%- END -%]
 [%- END -%]
 [%- END %]
 [%- includes = include.unique.sort %]
 [%- FOREACH header = includes%]
#include <[% header %]>
 [%- END %]
 [%- END %]
[%- #-----------------------------  END: MACRO INCLUDES(Data) --------------------# %]