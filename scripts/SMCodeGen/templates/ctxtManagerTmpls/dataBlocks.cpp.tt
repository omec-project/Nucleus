[%- DataStore = TemplateInputVar %]
[%- USE String %]
[%- PROCESS templates/ctxtManagerTmpls/commonMacro.tt | trim -%]
/*
 * Copyright [%CURRENTYEAR%]-present Infosys Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/**************************************
 *
 * This is an auto generated file.
 * Please do not edit this file.
 * All edits to be made through template source file
 * <TOP-DIR/scripts/SMCodeGen/templates/ctxtManagerTmpls/dataBlocks.cpp.tt>
 ***************************************/
[% FOREACH DataGroup = DataStore.DataGroups %]
[%- IF DataGroup.DgName == 'Subs' -%]
#include "contextManager/dataBlocks.h"
[%- ELSE -%]
#include "[% FILENAME(DataGroup.DgName) %]ContextManager/[%  FILENAME(DataGroup.DgName) %]DataBlocks.h"
[%- END %]
[%- END %]

namespace mme
{
	[%- FOREACH DataGroup = DataStore.DataGroups %]
	[%- FOREACH DataBlock = DataGroup.DataBlocks %]
	[%- dataBlockClassName = CLASSNAME(DataBlock.BlockName) %]
	/******************************************************************************
	*******************************************************************************
	*							[% dataBlockClassName %]
	*******************************************************************************
	******************************************************************************/
	
	/******************************************************************************
	* Constructor
	******************************************************************************/
	[% dataBlockClassName %]::[% dataBlockClassName %]():[% INITIALIZER(DataBlock) FILTER indent 11 -%]

	{[%- FOREACH Data = DataBlock.Data -%]
[%-UNLESS Data.Cardinality=='' %]
        [%-UNLESS Data.Type.search('std\:\:(list|array|vector)') %]
		memset([% Data.Name %]_m,0,sizeof([% Data.Name %]_m));
[%END-%][%END-%]
[%-END%]	
	}
	
	/******************************************************************************
	* Destructor
	******************************************************************************/
	[% dataBlockClassName %]::~[% dataBlockClassName %]()
	{
	}	
	[%- FOREACH Item = DataBlock.Data %]
        [%- ptrType = Item.Type.match('^std\:\:shared_ptr\<(\w+\:{0,2}\w+)\>$') -%]
        [%- listType = Item.Type.match('^std\:\:(list|vector|array)\<((\w+\:{0,2}\w+)((\*|\&))?)(\,\d+)?\>$') -%]
        [%- IF ptrType %]

[% INCLUDE templates/ctxtManagerTmpls/sharedPtrAPICpp.tt -%]
        [%- ELSIF listType %]
        	[%- IF listType.4  =='*'%][% access_op = '->' %][%ELSE %][% access_op = '.' %][% END -%]
            		[%- IF listType.0 =='list' %]

[% INCLUDE templates/ctxtManagerTmpls/listAPI.tt %]
	        	[%- ELSIF listType.0 =='vector'%]
[% INCLUDE templates/ctxtManagerTmpls/vectorAPI.tt %]
	        	[%- ELSIF listType.0 == 'array'%]
[% INCLUDE templates/ctxtManagerTmpls/arrayAPI.tt %]	
	        	[%-END%]
        	[%- ELSE %]
	
[%- INCLUDE templates/ctxtManagerTmpls/getterSetterAPICpp.tt %]
		[%- END %]
	[%- END %]
	
	[%- FOREACH Item = DataBlock.Children %]
[%- INCLUDE templates/ctxtManagerTmpls/childAPICpp.tt %]
    [%- END %]
[%- END %]
[%- END %]
} // mme
